# Generated by Django 3.0.8 on 2020-07-16 21:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="NextUrl",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.URLField()),
                (
                    "entity",
                    models.CharField(
                        choices=[("REPO", "repo"), ("USER", "user")],
                        max_length=4,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("login", models.CharField(max_length=200)),
                ("node_id", models.CharField(max_length=200)),
                ("avatar_url", models.URLField()),
                ("gravatar_id", models.CharField(max_length=200)),
                ("url", models.URLField()),
                ("html_url", models.URLField()),
                ("followers_url", models.URLField()),
                ("following_url", models.URLField()),
                ("gists_url", models.URLField()),
                ("starred_url", models.URLField()),
                ("subscriptions_url", models.URLField()),
                ("organizations_url", models.URLField()),
                ("repos_url", models.URLField()),
                ("events_url", models.URLField()),
                ("received_events_url", models.URLField()),
                ("type", models.CharField(max_length=200)),
                ("site_admin", models.BooleanField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Repo",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("node_id", models.CharField(max_length=200)),
                ("name", models.CharField(max_length=200)),
                ("full_name", models.CharField(max_length=200)),
                ("private", models.BooleanField()),
                ("html_url", models.URLField()),
                ("description", models.TextField()),
                ("fork", models.BooleanField()),
                ("url", models.URLField()),
                ("forks_url", models.URLField()),
                ("keys_url", models.URLField()),
                ("collaborators_url", models.URLField()),
                ("teams_url", models.URLField()),
                ("hooks_url", models.URLField()),
                ("issue_events_url", models.URLField()),
                ("events_url", models.URLField()),
                ("assignees_url", models.URLField()),
                ("branches_url", models.URLField()),
                ("tags_url", models.URLField()),
                ("blobs_url", models.URLField()),
                ("git_tags_url", models.URLField()),
                ("git_refs_url", models.URLField()),
                ("trees_url", models.URLField()),
                ("statuses_url", models.URLField()),
                ("languages_url", models.URLField()),
                ("stargazers_url", models.URLField()),
                ("contributors_url", models.URLField()),
                ("subscribers_url", models.URLField()),
                ("subscription_url", models.URLField()),
                ("commits_url", models.URLField()),
                ("git_commits_url", models.URLField()),
                ("comments_url", models.URLField()),
                ("issue_comment_url", models.URLField()),
                ("contents_url", models.URLField()),
                ("compare_url", models.URLField()),
                ("merges_url", models.URLField()),
                ("archive_url", models.URLField()),
                ("downloads_url", models.URLField()),
                ("issues_url", models.URLField()),
                ("pulls_url", models.URLField()),
                ("milestones_url", models.URLField()),
                ("notifications_url", models.URLField()),
                ("labels_url", models.URLField()),
                ("releases_url", models.URLField()),
                ("deployments_url", models.URLField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repos",
                        to="scraper.User",
                    ),
                ),
            ],
        ),
    ]
